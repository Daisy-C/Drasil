digraph alltypes {
	subgraph clike {
	}
	subgraph csarprendererh {
		subgraph csharpcodea{
		CSharpCodea -> a;
		CSharpCodea	[shape=oval, color=darkgreen, label="CSharpCodea"];
		}
		subgraph programcsharpcode{
		ProgramCSharpCode -> ProgData;
		ProgramCSharpCode	[shape=oval, color=red2, label="ProgramCSharpCode"];
		}
		subgraph filecsharpcode{
		FileCSharpCode -> FileData;
		FileCSharpCode	[shape=oval, color=red2, label="FileCSharpCode"];
		}
		subgraph importcsharpcode{
		ImportCSharpCode -> Doc;
		ImportCSharpCode	[shape=oval, color=red2, label="ImportCSharpCode"];
		}
		subgraph permanencecsharpcode{
		PermanenceCSharpCode -> Doc;
		PermanenceCSharpCode	[shape=oval, color=red2, label="PermanenceCSharpCode"];
		}
		subgraph bodycsharpcode{
		BodyCSharpCode -> Doc;
		BodyCSharpCode	[shape=oval, color=red2, label="BodyCSharpCode"];
		}
		subgraph blockcsharpcode{
		BlockCSharpCode -> Doc;
		BlockCSharpCode	[shape=oval, color=red2, label="BlockCSharpCode"];
		}
		subgraph typecsharpcode{
		TypeCSharpCode -> TypeData;
		TypeCSharpCode	[shape=oval, color=red2, label="TypeCSharpCode"];
		}
		subgraph unaryopcsharpcode{
		UnaryOpCSharpCode -> OpData;
		UnaryOpCSharpCode	[shape=oval, color=red2, label="UnaryOpCSharpCode"];
		}
		subgraph binaryopcsharpcode{
		BinaryOpCSharpCode -> OpData;
		BinaryOpCSharpCode	[shape=oval, color=red2, label="BinaryOpCSharpCode"];
		}
		subgraph variablecsharpcode{
		VariableCSharpCode -> VarData;
		VariableCSharpCode	[shape=oval, color=red2, label="VariableCSharpCode"];
		}
		subgraph valuecsharpcode{
		ValueCSharpCode -> ValData;
		ValueCSharpCode	[shape=oval, color=red2, label="ValueCSharpCode"];
		}
		subgraph functioncsharpcode{
		FunctionCSharpCode -> FuncData;
		FunctionCSharpCode	[shape=oval, color=red2, label="FunctionCSharpCode"];
		}
		subgraph statementcsharpcode{
		StatementCSharpCode -> DocTerminator;
		StatementCSharpCode	[shape=oval, color=red2, label="StatementCSharpCode"];
		}
		subgraph scopecsharpcode{
		ScopeCSharpCode -> Doc;
		ScopeCSharpCode	[shape=oval, color=red2, label="ScopeCSharpCode"];
		}
		subgraph methodtypecsharpcode{
		MethodTypeCSharpCode -> TypeData;
		MethodTypeCSharpCode	[shape=oval, color=red2, label="MethodTypeCSharpCode"];
		}
		subgraph parametercsharpcode{
		ParameterCSharpCode -> ParamData;
		ParameterCSharpCode	[shape=oval, color=red2, label="ParameterCSharpCode"];
		}
		subgraph methodcsharpcode{
		MethodCSharpCode -> MethodData;
		MethodCSharpCode	[shape=oval, color=red2, label="MethodCSharpCode"];
		}
		subgraph statevarcsharpcode{
		StateVarCSharpCode -> Doc;
		StateVarCSharpCode	[shape=oval, color=red2, label="StateVarCSharpCode"];
		}
		subgraph classcsharpcode{
		ClassCSharpCode -> Doc;
		ClassCSharpCode	[shape=oval, color=red2, label="ClassCSharpCode"];
		}
		subgraph modulecsharpcode{
		ModuleCSharpCode -> ModData;
		ModuleCSharpCode	[shape=oval, color=red2, label="ModuleCSharpCode"];
		}
		subgraph blockcommentcsharpcode{
		BlockCommentCSharpCode -> Doc;
		BlockCommentCSharpCode	[shape=oval, color=red2, label="BlockCommentCSharpCode"];
		}
	}
	subgraph commonpeudooos {
	}
	subgraph contructorss {
		subgraph vsopr{
		VSOpr -> VSrOpData;
		VSOpr	[shape=oval, color=red2, label="VSOpr"];
		}
	}
	subgraph cpprenderer {
		subgraph cppcodexya{
		CppCodexya -> xa;
		CppCodexya -> ya;
		CppCodexya	[shape=oval, color=cyan3, label="CppCodexya"];
		}
		subgraph methoddata{
		MethodData -> ScopeTag;
		MethodData -> Doc;
		MethodData	[shape=oval, color=cyan3, label="MethodData"];
		}
		subgraph cppsrccodea{
		CppSrcCodea -> a;
		CppSrcCodea	[shape=oval, color=darkgreen, label="CppSrcCodea"];
		}
		subgraph cpphdrcodea{
		CppHdrCodea -> a;
		CppHdrCodea	[shape=oval, color=darkgreen, label="CppHdrCodea"];
		}
		subgraph programpcppsrccodecpphdrcode{
		ProgrampCppSrcCodeCppHdrCode -> ProgData;
		ProgrampCppSrcCodeCppHdrCode	[shape=oval, color=red2, label="ProgrampCppSrcCodeCppHdrCode"];
		}
		subgraph filepcppsrccodecpphdrcode{
		FilepCppSrcCodeCppHdrCode -> FileData;
		FilepCppSrcCodeCppHdrCode	[shape=oval, color=red2, label="FilepCppSrcCodeCppHdrCode"];
		}
		subgraph importpcppsrccodecpphdrcode{
		ImportpCppSrcCodeCppHdrCode -> Doc;
		ImportpCppSrcCodeCppHdrCode	[shape=oval, color=red2, label="ImportpCppSrcCodeCppHdrCode"];
		}
		subgraph permanencepcppsrccodecpphdrcode{
		PermanencepCppSrcCodeCppHdrCode -> BindData;
		PermanencepCppSrcCodeCppHdrCode	[shape=oval, color=red2, label="PermanencepCppSrcCodeCppHdrCode"];
		}
		subgraph bodypcppsrccodecpphdrcode{
		BodypCppSrcCodeCppHdrCode -> Doc;
		BodypCppSrcCodeCppHdrCode	[shape=oval, color=red2, label="BodypCppSrcCodeCppHdrCode"];
		}
		subgraph blockpcppsrccodecpphdrcode{
		BlockpCppSrcCodeCppHdrCode -> Doc;
		BlockpCppSrcCodeCppHdrCode	[shape=oval, color=red2, label="BlockpCppSrcCodeCppHdrCode"];
		}
		subgraph typepcppsrccodecpphdrcode{
		TypepCppSrcCodeCppHdrCode -> TypeData;
		TypepCppSrcCodeCppHdrCode	[shape=oval, color=red2, label="TypepCppSrcCodeCppHdrCode"];
		}
		subgraph unaryoppcppsrccodecpphdrcode{
		UnaryOppCppSrcCodeCppHdrCode -> OpData;
		UnaryOppCppSrcCodeCppHdrCode	[shape=oval, color=red2, label="UnaryOppCppSrcCodeCppHdrCode"];
		}
		subgraph binaryoppcppsrccodecpphdrcode{
		BinaryOppCppSrcCodeCppHdrCode -> OpData;
		BinaryOppCppSrcCodeCppHdrCode	[shape=oval, color=red2, label="BinaryOppCppSrcCodeCppHdrCode"];
		}
		subgraph variablepcppsrccodecpphdrcode{
		VariablepCppSrcCodeCppHdrCode -> VarData;
		VariablepCppSrcCodeCppHdrCode	[shape=oval, color=red2, label="VariablepCppSrcCodeCppHdrCode"];
		}
		subgraph valuepcppsrccodecpphdrcode{
		ValuepCppSrcCodeCppHdrCode -> ValData;
		ValuepCppSrcCodeCppHdrCode	[shape=oval, color=red2, label="ValuepCppSrcCodeCppHdrCode"];
		}
		subgraph functionpcppsrccodecpphdrcode{
		FunctionpCppSrcCodeCppHdrCode -> FuncData;
		FunctionpCppSrcCodeCppHdrCode	[shape=oval, color=red2, label="FunctionpCppSrcCodeCppHdrCode"];
		}
		subgraph statementpcppsrccodecpphdrcode{
		StatementpCppSrcCodeCppHdrCode -> DocTerminator;
		StatementpCppSrcCodeCppHdrCode	[shape=oval, color=red2, label="StatementpCppSrcCodeCppHdrCode"];
		}
		subgraph scopepcppsrccodecpphdrcode{
		ScopepCppSrcCodeCppHdrCode -> DocScopeTag;
		ScopepCppSrcCodeCppHdrCode	[shape=oval, color=red2, label="ScopepCppSrcCodeCppHdrCode"];
		}
		subgraph methodtypepcppsrccodecpphdrcode{
		MethodTypepCppSrcCodeCppHdrCode -> TypeData;
		MethodTypepCppSrcCodeCppHdrCode	[shape=oval, color=red2, label="MethodTypepCppSrcCodeCppHdrCode"];
		}
		subgraph parameterpcppsrccodecpphdrcode{
		ParameterpCppSrcCodeCppHdrCode -> ParamData;
		ParameterpCppSrcCodeCppHdrCode	[shape=oval, color=red2, label="ParameterpCppSrcCodeCppHdrCode"];
		}
		subgraph methodpcppsrccodecpphdrcode{
		MethodpCppSrcCodeCppHdrCode -> MethodData;
		MethodpCppSrcCodeCppHdrCode	[shape=oval, color=red2, label="MethodpCppSrcCodeCppHdrCode"];
		}
		subgraph statevarpcppsrccodecpphdrcode{
		StateVarpCppSrcCodeCppHdrCode -> StateVarData;
		StateVarpCppSrcCodeCppHdrCode	[shape=oval, color=red2, label="StateVarpCppSrcCodeCppHdrCode"];
		}
		subgraph classpcppsrccodecpphdrcode{
		ClasspCppSrcCodeCppHdrCode -> Doc;
		ClasspCppSrcCodeCppHdrCode	[shape=oval, color=red2, label="ClasspCppSrcCodeCppHdrCode"];
		}
		subgraph modulepcppsrccodecpphdrcode{
		ModulepCppSrcCodeCppHdrCode -> ModData;
		ModulepCppSrcCodeCppHdrCode	[shape=oval, color=red2, label="ModulepCppSrcCodeCppHdrCode"];
		}
		subgraph blockcommentpcppsrccodecpphdrcode{
		BlockCommentpCppSrcCodeCppHdrCode -> Doc;
		BlockCommentpCppSrcCodeCppHdrCode	[shape=oval, color=red2, label="BlockCommentpCppSrcCodeCppHdrCode"];
		}
		subgraph srcstatesa{
		SrcStatesa -> StatesCppSrcCodea;
		SrcStatesa	[shape=oval, color=red2, label="SrcStatesa"];
		}
		subgraph hdrstatesa{
		HdrStatesa -> StatesCppHdrCodea;
		HdrStatesa	[shape=oval, color=red2, label="HdrStatesa"];
		}
		subgraph pairstatespa{
		PairStatespa -> StatespCppSrcCodeCppHdrCodea;
		PairStatespa	[shape=oval, color=red2, label="PairStatespa"];
		}
		subgraph programcppsrccode{
		ProgramCppSrcCode -> ProgData;
		ProgramCppSrcCode	[shape=oval, color=red2, label="ProgramCppSrcCode"];
		}
		subgraph filecppsrccode{
		FileCppSrcCode -> FileData;
		FileCppSrcCode	[shape=oval, color=red2, label="FileCppSrcCode"];
		}
		subgraph importcppsrccode{
		ImportCppSrcCode -> Doc;
		ImportCppSrcCode	[shape=oval, color=red2, label="ImportCppSrcCode"];
		}
		subgraph permanencecppsrccode{
		PermanenceCppSrcCode -> BindData;
		PermanenceCppSrcCode	[shape=oval, color=red2, label="PermanenceCppSrcCode"];
		}
		subgraph bodycppsrccode{
		BodyCppSrcCode -> Doc;
		BodyCppSrcCode	[shape=oval, color=red2, label="BodyCppSrcCode"];
		}
		subgraph blockcppsrccode{
		BlockCppSrcCode -> Doc;
		BlockCppSrcCode	[shape=oval, color=red2, label="BlockCppSrcCode"];
		}
		subgraph typecppsrccode{
		TypeCppSrcCode -> TypeData;
		TypeCppSrcCode	[shape=oval, color=red2, label="TypeCppSrcCode"];
		}
		subgraph unaryopcppsrccode{
		UnaryOpCppSrcCode -> OpData;
		UnaryOpCppSrcCode	[shape=oval, color=red2, label="UnaryOpCppSrcCode"];
		}
		subgraph binaryopcppsrccode{
		BinaryOpCppSrcCode -> OpData;
		BinaryOpCppSrcCode	[shape=oval, color=red2, label="BinaryOpCppSrcCode"];
		}
		subgraph variablecppsrccode{
		VariableCppSrcCode -> VarData;
		VariableCppSrcCode	[shape=oval, color=red2, label="VariableCppSrcCode"];
		}
		subgraph valuecppsrccode{
		ValueCppSrcCode -> ValData;
		ValueCppSrcCode	[shape=oval, color=red2, label="ValueCppSrcCode"];
		}
		subgraph functioncppsrccode{
		FunctionCppSrcCode -> FuncData;
		FunctionCppSrcCode	[shape=oval, color=red2, label="FunctionCppSrcCode"];
		}
		subgraph statementcppsrccode{
		StatementCppSrcCode -> DocTerminator;
		StatementCppSrcCode	[shape=oval, color=red2, label="StatementCppSrcCode"];
		}
		subgraph scopecppsrccode{
		ScopeCppSrcCode -> DocScopeTag;
		ScopeCppSrcCode	[shape=oval, color=red2, label="ScopeCppSrcCode"];
		}
		subgraph methodtypecppsrccode{
		MethodTypeCppSrcCode -> TypeData;
		MethodTypeCppSrcCode	[shape=oval, color=red2, label="MethodTypeCppSrcCode"];
		}
		subgraph parametercppsrccode{
		ParameterCppSrcCode -> ParamData;
		ParameterCppSrcCode	[shape=oval, color=red2, label="ParameterCppSrcCode"];
		}
		subgraph methodcppsrccode{
		MethodCppSrcCode -> MethodData;
		MethodCppSrcCode	[shape=oval, color=red2, label="MethodCppSrcCode"];
		}
		subgraph statevarcppsrccode{
		StateVarCppSrcCode -> StateVarData;
		StateVarCppSrcCode	[shape=oval, color=red2, label="StateVarCppSrcCode"];
		}
		subgraph classcppsrccode{
		ClassCppSrcCode -> Doc;
		ClassCppSrcCode	[shape=oval, color=red2, label="ClassCppSrcCode"];
		}
		subgraph modulecppsrccode{
		ModuleCppSrcCode -> ModData;
		ModuleCppSrcCode	[shape=oval, color=red2, label="ModuleCppSrcCode"];
		}
		subgraph blockcommentcppsrccode{
		BlockCommentCppSrcCode -> Doc;
		BlockCommentCppSrcCode	[shape=oval, color=red2, label="BlockCommentCppSrcCode"];
		}
		subgraph filecpphdrcode{
		FileCppHdrCode -> FileData;
		FileCppHdrCode	[shape=oval, color=red2, label="FileCppHdrCode"];
		}
		subgraph importcpphdrcode{
		ImportCppHdrCode -> Doc;
		ImportCppHdrCode	[shape=oval, color=red2, label="ImportCppHdrCode"];
		}
		subgraph permanencecpphdrcode{
		PermanenceCppHdrCode -> BindData;
		PermanenceCppHdrCode	[shape=oval, color=red2, label="PermanenceCppHdrCode"];
		}
		subgraph bodycpphdrcode{
		BodyCppHdrCode -> Doc;
		BodyCppHdrCode	[shape=oval, color=red2, label="BodyCppHdrCode"];
		}
		subgraph blockcpphdrcode{
		BlockCppHdrCode -> Doc;
		BlockCppHdrCode	[shape=oval, color=red2, label="BlockCppHdrCode"];
		}
		subgraph typecpphdrcode{
		TypeCppHdrCode -> TypeData;
		TypeCppHdrCode	[shape=oval, color=red2, label="TypeCppHdrCode"];
		}
		subgraph unaryopcpphdrcode{
		UnaryOpCppHdrCode -> OpData;
		UnaryOpCppHdrCode	[shape=oval, color=red2, label="UnaryOpCppHdrCode"];
		}
		subgraph binaryopcpphdrcode{
		BinaryOpCppHdrCode -> OpData;
		BinaryOpCppHdrCode	[shape=oval, color=red2, label="BinaryOpCppHdrCode"];
		}
		subgraph variablecpphdrcode{
		VariableCppHdrCode -> VarData;
		VariableCppHdrCode	[shape=oval, color=red2, label="VariableCppHdrCode"];
		}
		subgraph valuecpphdrcode{
		ValueCppHdrCode -> ValData;
		ValueCppHdrCode	[shape=oval, color=red2, label="ValueCppHdrCode"];
		}
		subgraph functioncpphdrcode{
		FunctionCppHdrCode -> FuncData;
		FunctionCppHdrCode	[shape=oval, color=red2, label="FunctionCppHdrCode"];
		}
		subgraph statementcpphdrcode{
		StatementCppHdrCode -> DocTerminator;
		StatementCppHdrCode	[shape=oval, color=red2, label="StatementCppHdrCode"];
		}
		subgraph scopecpphdrcode{
		ScopeCppHdrCode -> DocScopeTag;
		ScopeCppHdrCode	[shape=oval, color=red2, label="ScopeCppHdrCode"];
		}
		subgraph methodtypecpphdrcode{
		MethodTypeCppHdrCode -> TypeData;
		MethodTypeCppHdrCode	[shape=oval, color=red2, label="MethodTypeCppHdrCode"];
		}
		subgraph parametercpphdrcode{
		ParameterCppHdrCode -> ParamData;
		ParameterCppHdrCode	[shape=oval, color=red2, label="ParameterCppHdrCode"];
		}
		subgraph methodcpphdrcode{
		MethodCppHdrCode -> MethodData;
		MethodCppHdrCode	[shape=oval, color=red2, label="MethodCppHdrCode"];
		}
		subgraph statevarcpphdrcode{
		StateVarCppHdrCode -> StateVarData;
		StateVarCppHdrCode	[shape=oval, color=red2, label="StateVarCppHdrCode"];
		}
		subgraph classcpphdrcode{
		ClassCppHdrCode -> Doc;
		ClassCppHdrCode	[shape=oval, color=red2, label="ClassCppHdrCode"];
		}
		subgraph modulecpphdrcode{
		ModuleCppHdrCode -> ModData;
		ModuleCppHdrCode	[shape=oval, color=red2, label="ModuleCppHdrCode"];
		}
		subgraph blockcommentcpphdrcode{
		BlockCommentCppHdrCode -> Doc;
		BlockCommentCppHdrCode	[shape=oval, color=red2, label="BlockCommentCppHdrCode"];
		}
	}
	subgraph javarenderer {
		subgraph javacodea{
		JavaCodea -> a;
		JavaCodea	[shape=oval, color=darkgreen, label="JavaCodea"];
		}
		subgraph programjavacode{
		ProgramJavaCode -> ProgData;
		ProgramJavaCode	[shape=oval, color=red2, label="ProgramJavaCode"];
		}
		subgraph filejavacode{
		FileJavaCode -> FileData;
		FileJavaCode	[shape=oval, color=red2, label="FileJavaCode"];
		}
		subgraph importjavacode{
		ImportJavaCode -> Doc;
		ImportJavaCode	[shape=oval, color=red2, label="ImportJavaCode"];
		}
		subgraph permanencejavacode{
		PermanenceJavaCode -> Doc;
		PermanenceJavaCode	[shape=oval, color=red2, label="PermanenceJavaCode"];
		}
		subgraph bodyjavacode{
		BodyJavaCode -> Doc;
		BodyJavaCode	[shape=oval, color=red2, label="BodyJavaCode"];
		}
		subgraph blockjavacode{
		BlockJavaCode -> Doc;
		BlockJavaCode	[shape=oval, color=red2, label="BlockJavaCode"];
		}
		subgraph typejavacode{
		TypeJavaCode -> TypeData;
		TypeJavaCode	[shape=oval, color=red2, label="TypeJavaCode"];
		}
		subgraph unaryopjavacode{
		UnaryOpJavaCode -> OpData;
		UnaryOpJavaCode	[shape=oval, color=red2, label="UnaryOpJavaCode"];
		}
		subgraph binaryopjavacode{
		BinaryOpJavaCode -> OpData;
		BinaryOpJavaCode	[shape=oval, color=red2, label="BinaryOpJavaCode"];
		}
		subgraph variablejavacode{
		VariableJavaCode -> VarData;
		VariableJavaCode	[shape=oval, color=red2, label="VariableJavaCode"];
		}
		subgraph valuejavacode{
		ValueJavaCode -> ValData;
		ValueJavaCode	[shape=oval, color=red2, label="ValueJavaCode"];
		}
		subgraph functionjavacode{
		FunctionJavaCode -> FuncData;
		FunctionJavaCode	[shape=oval, color=red2, label="FunctionJavaCode"];
		}
		subgraph statementjavacode{
		StatementJavaCode -> DocTerminator;
		StatementJavaCode	[shape=oval, color=red2, label="StatementJavaCode"];
		}
		subgraph scopejavacode{
		ScopeJavaCode -> Doc;
		ScopeJavaCode	[shape=oval, color=red2, label="ScopeJavaCode"];
		}
		subgraph methodtypejavacode{
		MethodTypeJavaCode -> TypeData;
		MethodTypeJavaCode	[shape=oval, color=red2, label="MethodTypeJavaCode"];
		}
		subgraph parameterjavacode{
		ParameterJavaCode -> ParamData;
		ParameterJavaCode	[shape=oval, color=red2, label="ParameterJavaCode"];
		}
		subgraph methodjavacode{
		MethodJavaCode -> MethodData;
		MethodJavaCode	[shape=oval, color=red2, label="MethodJavaCode"];
		}
		subgraph statevarjavacode{
		StateVarJavaCode -> Doc;
		StateVarJavaCode	[shape=oval, color=red2, label="StateVarJavaCode"];
		}
		subgraph classjavacode{
		ClassJavaCode -> Doc;
		ClassJavaCode	[shape=oval, color=red2, label="ClassJavaCode"];
		}
		subgraph modulejavacode{
		ModuleJavaCode -> ModData;
		ModuleJavaCode	[shape=oval, color=red2, label="ModuleJavaCode"];
		}
		subgraph blockcommentjavacode{
		BlockCommentJavaCode -> Doc;
		BlockCommentJavaCode	[shape=oval, color=red2, label="BlockCommentJavaCode"];
		}
	}
	subgraph languagepolymorpich {
	}
	subgraph macros {
	}
	subgraph pytonrendererh {
		subgraph pythoncodea{
		PythonCodea -> a;
		PythonCodea	[shape=oval, color=darkgreen, label="PythonCodea"];
		}
		subgraph programpythoncode{
		ProgramPythonCode -> ProgData;
		ProgramPythonCode	[shape=oval, color=red2, label="ProgramPythonCode"];
		}
		subgraph filepythoncode{
		FilePythonCode -> FileData;
		FilePythonCode	[shape=oval, color=red2, label="FilePythonCode"];
		}
		subgraph importpythoncode{
		ImportPythonCode -> Doc;
		ImportPythonCode	[shape=oval, color=red2, label="ImportPythonCode"];
		}
		subgraph permanencepythoncode{
		PermanencePythonCode -> Doc;
		PermanencePythonCode	[shape=oval, color=red2, label="PermanencePythonCode"];
		}
		subgraph bodypythoncode{
		BodyPythonCode -> Doc;
		BodyPythonCode	[shape=oval, color=red2, label="BodyPythonCode"];
		}
		subgraph blockpythoncode{
		BlockPythonCode -> Doc;
		BlockPythonCode	[shape=oval, color=red2, label="BlockPythonCode"];
		}
		subgraph typepythoncode{
		TypePythonCode -> TypeData;
		TypePythonCode	[shape=oval, color=red2, label="TypePythonCode"];
		}
		subgraph unaryoppythoncode{
		UnaryOpPythonCode -> OpData;
		UnaryOpPythonCode	[shape=oval, color=red2, label="UnaryOpPythonCode"];
		}
		subgraph binaryoppythoncode{
		BinaryOpPythonCode -> OpData;
		BinaryOpPythonCode	[shape=oval, color=red2, label="BinaryOpPythonCode"];
		}
		subgraph variablepythoncode{
		VariablePythonCode -> VarData;
		VariablePythonCode	[shape=oval, color=red2, label="VariablePythonCode"];
		}
		subgraph valuepythoncode{
		ValuePythonCode -> ValData;
		ValuePythonCode	[shape=oval, color=red2, label="ValuePythonCode"];
		}
		subgraph functionpythoncode{
		FunctionPythonCode -> FuncData;
		FunctionPythonCode	[shape=oval, color=red2, label="FunctionPythonCode"];
		}
		subgraph statementpythoncode{
		StatementPythonCode -> DocTerminator;
		StatementPythonCode	[shape=oval, color=red2, label="StatementPythonCode"];
		}
		subgraph scopepythoncode{
		ScopePythonCode -> Doc;
		ScopePythonCode	[shape=oval, color=red2, label="ScopePythonCode"];
		}
		subgraph methodtypepythoncode{
		MethodTypePythonCode -> TypeData;
		MethodTypePythonCode	[shape=oval, color=red2, label="MethodTypePythonCode"];
		}
		subgraph parameterpythoncode{
		ParameterPythonCode -> ParamData;
		ParameterPythonCode	[shape=oval, color=red2, label="ParameterPythonCode"];
		}
		subgraph methodpythoncode{
		MethodPythonCode -> MethodData;
		MethodPythonCode	[shape=oval, color=red2, label="MethodPythonCode"];
		}
		subgraph statevarpythoncode{
		StateVarPythonCode -> Doc;
		StateVarPythonCode	[shape=oval, color=red2, label="StateVarPythonCode"];
		}
		subgraph classpythoncode{
		ClassPythonCode -> Doc;
		ClassPythonCode	[shape=oval, color=red2, label="ClassPythonCode"];
		}
		subgraph modulepythoncode{
		ModulePythonCode -> ModData;
		ModulePythonCode	[shape=oval, color=red2, label="ModulePythonCode"];
		}
		subgraph blockcommentpythoncode{
		BlockCommentPythonCode -> Doc;
		BlockCommentPythonCode	[shape=oval, color=red2, label="BlockCommentPythonCode"];
		}
	}
	subgraph swiftrenderer {
		subgraph swiftcodea{
		SwiftCodea -> a;
		SwiftCodea	[shape=oval, color=darkgreen, label="SwiftCodea"];
		}
		subgraph programswiftcode{
		ProgramSwiftCode -> ProgData;
		ProgramSwiftCode	[shape=oval, color=red2, label="ProgramSwiftCode"];
		}
		subgraph fileswiftcode{
		FileSwiftCode -> FileData;
		FileSwiftCode	[shape=oval, color=red2, label="FileSwiftCode"];
		}
		subgraph importswiftcode{
		ImportSwiftCode -> Doc;
		ImportSwiftCode	[shape=oval, color=red2, label="ImportSwiftCode"];
		}
		subgraph permanenceswiftcode{
		PermanenceSwiftCode -> Doc;
		PermanenceSwiftCode	[shape=oval, color=red2, label="PermanenceSwiftCode"];
		}
		subgraph bodyswiftcode{
		BodySwiftCode -> Doc;
		BodySwiftCode	[shape=oval, color=red2, label="BodySwiftCode"];
		}
		subgraph blockswiftcode{
		BlockSwiftCode -> Doc;
		BlockSwiftCode	[shape=oval, color=red2, label="BlockSwiftCode"];
		}
		subgraph typeswiftcode{
		TypeSwiftCode -> TypeData;
		TypeSwiftCode	[shape=oval, color=red2, label="TypeSwiftCode"];
		}
		subgraph unaryopswiftcode{
		UnaryOpSwiftCode -> OpData;
		UnaryOpSwiftCode	[shape=oval, color=red2, label="UnaryOpSwiftCode"];
		}
		subgraph binaryopswiftcode{
		BinaryOpSwiftCode -> OpData;
		BinaryOpSwiftCode	[shape=oval, color=red2, label="BinaryOpSwiftCode"];
		}
		subgraph variableswiftcode{
		VariableSwiftCode -> VarData;
		VariableSwiftCode	[shape=oval, color=red2, label="VariableSwiftCode"];
		}
		subgraph valueswiftcode{
		ValueSwiftCode -> ValData;
		ValueSwiftCode	[shape=oval, color=red2, label="ValueSwiftCode"];
		}
		subgraph functionswiftcode{
		FunctionSwiftCode -> FuncData;
		FunctionSwiftCode	[shape=oval, color=red2, label="FunctionSwiftCode"];
		}
		subgraph statementswiftcode{
		StatementSwiftCode -> DocTerminator;
		StatementSwiftCode	[shape=oval, color=red2, label="StatementSwiftCode"];
		}
		subgraph scopeswiftcode{
		ScopeSwiftCode -> Doc;
		ScopeSwiftCode	[shape=oval, color=red2, label="ScopeSwiftCode"];
		}
		subgraph methodtypeswiftcode{
		MethodTypeSwiftCode -> TypeData;
		MethodTypeSwiftCode	[shape=oval, color=red2, label="MethodTypeSwiftCode"];
		}
		subgraph parameterswiftcode{
		ParameterSwiftCode -> ParamData;
		ParameterSwiftCode	[shape=oval, color=red2, label="ParameterSwiftCode"];
		}
		subgraph methodswiftcode{
		MethodSwiftCode -> MethodData;
		MethodSwiftCode	[shape=oval, color=red2, label="MethodSwiftCode"];
		}
		subgraph statevarswiftcode{
		StateVarSwiftCode -> Doc;
		StateVarSwiftCode	[shape=oval, color=red2, label="StateVarSwiftCode"];
		}
		subgraph classswiftcode{
		ClassSwiftCode -> Doc;
		ClassSwiftCode	[shape=oval, color=red2, label="ClassSwiftCode"];
		}
		subgraph moduleswiftcode{
		ModuleSwiftCode -> ModData;
		ModuleSwiftCode	[shape=oval, color=red2, label="ModuleSwiftCode"];
		}
		subgraph blockcommentswiftcode{
		BlockCommentSwiftCode -> Doc;
		BlockCommentSwiftCode	[shape=oval, color=red2, label="BlockCommentSwiftCode"];
		}
	}
	subgraph ast {
		subgraph binddata{
		BindData -> Binding;
		BindData -> Doc;
		BindData	[shape=oval, color=cyan3, label="BindData"];
		}
		subgraph filedata{
		FileData -> FilePath;
		FileData -> ModData;
		FileData	[shape=oval, color=cyan3, label="FileData"];
		}
		subgraph funcdata{
		FuncData -> TypeData;
		FuncData -> Doc;
		FuncData	[shape=oval, color=cyan3, label="FuncData"];
		}
		subgraph moddata{
		ModData -> String;
		ModData -> Doc;
		ModData	[shape=oval, color=cyan3, label="ModData"];
		}
		subgraph opdata{
		OpData -> Int;
		OpData -> Doc;
		OpData	[shape=oval, color=cyan3, label="OpData"];
		}
		subgraph paramdata{
		ParamData -> VarData;
		ParamData -> Doc;
		ParamData	[shape=oval, color=cyan3, label="ParamData"];
		}
		subgraph progdata{
		ProgData -> String;
		ProgData -> FileData;
		ProgData	[shape=oval, color=cyan3, label="ProgData"];
		}
		subgraph statevardata{
		StateVarData -> ScopeTag;
		StateVarData -> Doc;
		StateVarData	[shape=oval, color=cyan3, label="StateVarData"];
		}
		subgraph typedata{
		TypeData -> CodeType;
		TypeData -> String;
		TypeData -> Doc;
		TypeData	[shape=oval, color=cyan3, label="TypeData"];
		}
		subgraph valdata{
		ValData -> MaybeInt;
		ValData -> TypeData;
		ValData -> Doc;
		ValData	[shape=oval, color=cyan3, label="ValData"];
		}
		subgraph vardata{
		VarData -> Binding;
		VarData -> String;
		VarData -> TypeData;
		VarData -> Doc;
		VarData	[shape=oval, color=cyan3, label="VarData"];
		}
		subgraph terminator{
		Terminator	[shape=oval, color=darkviolet, label="Terminator"];
		}
		subgraph scopetag{
		ScopeTag	[shape=oval, color=darkviolet, label="ScopeTag"];
		}
		subgraph qualifiedname{
		QualifiedName -> String;
		QualifiedName -> QualifiedName;
		QualifiedName	[shape=oval, color=darkviolet, label="QualifiedName"];
		}
		subgraph filetype{
		FileType	[shape=oval, color=darkviolet, label="FileType"];
		}
		subgraph binding{
		Binding -> Binding;
		Binding -> a;
		Binding	[shape=oval, color=darkviolet, label="Binding"];
		}
		subgraph methoddata{
		MethodData -> Doc;
		MethodData	[shape=oval, color=darkgreen, label="MethodData"];
		}
	}
	subgraph clasinterfaces {
		subgraph label{
		Label -> String;
		Label	[shape=oval, color=red2, label="Label"];
		}
		subgraph library{
		Library -> String;
		Library	[shape=oval, color=red2, label="Library"];
		}
		subgraph gsprograma{
		GSPrograma -> GSaPrograma;
		GSPrograma	[shape=oval, color=red2, label="GSPrograma"];
		}
		subgraph sfilea{
		SFilea -> FSaFilea;
		SFilea	[shape=oval, color=red2, label="SFilea"];
		}
		subgraph msbodya{
		MSBodya -> MSaBodya;
		MSBodya	[shape=oval, color=red2, label="MSBodya"];
		}
		subgraph msblocka{
		MSBlocka -> MSaBlocka;
		MSBlocka	[shape=oval, color=red2, label="MSBlocka"];
		}
		subgraph vstypea{
		VSTypea -> VSaTypea;
		VSTypea	[shape=oval, color=red2, label="VSTypea"];
		}
		subgraph svariablea{
		SVariablea -> VSaVariablea;
		SVariablea	[shape=oval, color=red2, label="SVariablea"];
		}
		subgraph svaluea{
		SValuea -> VSaValuea;
		SValuea	[shape=oval, color=red2, label="SValuea"];
		}
		subgraph namedargsr{
		NamedArgsr -> SVariablerSValuer;
		NamedArgsr	[shape=oval, color=red2, label="NamedArgsr"];
		}
		subgraph mixedcallr{
		MixedCallr -> LabelVSTyperSValuerNamedArgsrSValuer;
		MixedCallr	[shape=oval, color=red2, label="MixedCallr"];
		}
		subgraph mixedctorcallr{
		MixedCtorCallr -> VSTyperSValuerNamedArgsrSValuer;
		MixedCtorCallr	[shape=oval, color=red2, label="MixedCtorCallr"];
		}
		subgraph poscallr{
		PosCallr -> LabelVSTyperSValuerSValuer;
		PosCallr	[shape=oval, color=red2, label="PosCallr"];
		}
		subgraph posctorcallr{
		PosCtorCallr -> VSTyperSValuerSValuer;
		PosCtorCallr	[shape=oval, color=red2, label="PosCtorCallr"];
		}
		subgraph vsfunctiona{
		VSFunctiona -> VSaFunctiona;
		VSFunctiona	[shape=oval, color=red2, label="VSFunctiona"];
		}
		subgraph msstatementa{
		MSStatementa -> MSaStatementa;
		MSStatementa	[shape=oval, color=red2, label="MSStatementa"];
		}
		subgraph inoutcallr{
		InOutCallr -> LabelSValuerSVariablerSVariabler;
		InOutCallr	[shape=oval, color=red2, label="InOutCallr"];
		}
		subgraph comment{
		Comment -> String;
		Comment	[shape=oval, color=red2, label="Comment"];
		}
		subgraph msparametera{
		MSParametera -> MSaParametera;
		MSParametera	[shape=oval, color=red2, label="MSParametera"];
		}
		subgraph smethoda{
		SMethoda -> MSaMethoda;
		SMethoda	[shape=oval, color=red2, label="SMethoda"];
		}
		subgraph initializersr{
		Initializersr -> SVariablerSValuer;
		Initializersr	[shape=oval, color=red2, label="Initializersr"];
		}
		subgraph inoutfuncr{
		InOutFuncr -> SVariablerSVariablerSVariabler;
		InOutFuncr	[shape=oval, color=red2, label="InOutFuncr"];
		}
		subgraph docinoutfuncr{
		DocInOutFuncr -> StringStringSVariabler;
		DocInOutFuncr	[shape=oval, color=red2, label="DocInOutFuncr"];
		}
		subgraph csstatevara{
		CSStateVara -> CSaStateVara;
		CSStateVara	[shape=oval, color=red2, label="CSStateVara"];
		}
		subgraph sclassa{
		SClassa -> CSaClassa;
		SClassa	[shape=oval, color=red2, label="SClassa"];
		}
		subgraph fsmodulea{
		FSModulea -> FSaModulea;
		FSModulea	[shape=oval, color=red2, label="FSModulea"];
		}
	}
	subgraph clasess {
	}
	subgraph codeanalyiss {
		subgraph exceptiontype{
		ExceptionType -> String;
		ExceptionType	[shape=oval, color=darkviolet, label="ExceptionType"];
		}
	}
	subgraph codeinfo {
		subgraph codeinfoa{
		CodeInfoa -> a;
		CodeInfoa	[shape=oval, color=darkgreen, label="CodeInfoa"];
		}
		subgraph programcodeinfo{
		ProgramCodeInfo -> GOOLState;
		ProgramCodeInfo	[shape=oval, color=red2, label="ProgramCodeInfo"];
		}
		subgraph filecodeinfo{
		FileCodeInfo	[shape=oval, color=red2, label="FileCodeInfo"];
		}
		subgraph permanencecodeinfo{
		PermanenceCodeInfo	[shape=oval, color=red2, label="PermanenceCodeInfo"];
		}
		subgraph bodycodeinfo{
		BodyCodeInfo	[shape=oval, color=red2, label="BodyCodeInfo"];
		}
		subgraph blockcodeinfo{
		BlockCodeInfo	[shape=oval, color=red2, label="BlockCodeInfo"];
		}
		subgraph typecodeinfo{
		TypeCodeInfo -> String;
		TypeCodeInfo	[shape=oval, color=red2, label="TypeCodeInfo"];
		}
		subgraph variablecodeinfo{
		VariableCodeInfo	[shape=oval, color=red2, label="VariableCodeInfo"];
		}
		subgraph valuecodeinfo{
		ValueCodeInfo	[shape=oval, color=red2, label="ValueCodeInfo"];
		}
		subgraph functioncodeinfo{
		FunctionCodeInfo	[shape=oval, color=red2, label="FunctionCodeInfo"];
		}
		subgraph statementcodeinfo{
		StatementCodeInfo	[shape=oval, color=red2, label="StatementCodeInfo"];
		}
		subgraph scopecodeinfo{
		ScopeCodeInfo -> ScopeTag;
		ScopeCodeInfo	[shape=oval, color=red2, label="ScopeCodeInfo"];
		}
		subgraph parametercodeinfo{
		ParameterCodeInfo	[shape=oval, color=red2, label="ParameterCodeInfo"];
		}
		subgraph methodcodeinfo{
		MethodCodeInfo	[shape=oval, color=red2, label="MethodCodeInfo"];
		}
		subgraph statevarcodeinfo{
		StateVarCodeInfo	[shape=oval, color=red2, label="StateVarCodeInfo"];
		}
		subgraph classcodeinfo{
		ClassCodeInfo	[shape=oval, color=red2, label="ClassCodeInfo"];
		}
		subgraph modulecodeinfo{
		ModuleCodeInfo	[shape=oval, color=red2, label="ModuleCodeInfo"];
		}
	}
	subgraph codetype {
		subgraph codetype{
		CodeType	[shape=oval, color=darkviolet, label="CodeType"];
		}
		subgraph classname{
		ClassName -> String;
		ClassName	[shape=oval, color=red2, label="ClassName"];
		}
	}
	subgraph helpers {
	}
	subgraph languagerenderer {
		subgraph funcdocrenderer{
		FuncDocRenderer -> StringStringStringStringString;
		FuncDocRenderer	[shape=oval, color=red2, label="FuncDocRenderer"];
		}
		subgraph classdocrenderer{
		ClassDocRenderer -> StringString;
		ClassDocRenderer	[shape=oval, color=red2, label="ClassDocRenderer"];
		}
		subgraph moduledocrenderer{
		ModuleDocRenderer -> StringStringStringStringString;
		ModuleDocRenderer	[shape=oval, color=red2, label="ModuleDocRenderer"];
		}
	}
	subgraph rendererclasess {
		subgraph vsunopa{
		VSUnOpa -> VSaUnaryOpa;
		VSUnOpa	[shape=oval, color=red2, label="VSUnOpa"];
		}
		subgraph vsbinopa{
		VSBinOpa -> VSaBinaryOpa;
		VSBinOpa	[shape=oval, color=red2, label="VSBinOpa"];
		}
		subgraph msmthdtypea{
		MSMthdTypea -> MSaMethodTypea;
		MSMthdTypea	[shape=oval, color=red2, label="MSMthdTypea"];
		}
		subgraph parentspec{
		ParentSpec -> Doc;
		ParentSpec	[shape=oval, color=red2, label="ParentSpec"];
		}
	}
	subgraph state {
		subgraph goolstate{
		GOOLState -> FilePath;
		GOOLState -> MaybeFilePath;
		GOOLState -> MapStringClassName;
		GOOLState -> MapQualifiedNameExceptionType;
		GOOLState -> MapQualifiedNameQualifiedName;
		GOOLState -> Bool;
		GOOLState	[shape=oval, color=cyan3, label="GOOLState"];
		}
		subgraph filestate{
		FileState -> GOOLState;
		FileState -> String;
		FileState -> FileType;
		FileState -> Bool;
		FileState -> ClassName;
		FileState -> Doc;
		FileState	[shape=oval, color=cyan3, label="FileState"];
		}
		subgraph classstate{
		ClassState -> FileState;
		ClassState -> ClassName;
		ClassState	[shape=oval, color=cyan3, label="ClassState"];
		}
		subgraph methodstate{
		MethodState -> ClassState;
		MethodState -> String;
		MethodState -> Bool;
		MethodState -> ExceptionType;
		MethodState -> QualifiedName;
		MethodState -> ScopeTag;
		MethodState -> Index;
		MethodState	[shape=oval, color=cyan3, label="MethodState"];
		}
		subgraph valuestate{
		ValueState	[shape=oval, color=darkgreen, label="ValueState"];
		}
		subgraph index{
		Index -> Integer;
		Index	[shape=oval, color=red2, label="Index"];
		}
		subgraph gs{
		GS -> StateGOOLState;
		GS	[shape=oval, color=red2, label="GS"];
		}
		subgraph fs{
		FS -> StateFileState;
		FS	[shape=oval, color=red2, label="FS"];
		}
		subgraph cs{
		CS -> StateClassState;
		CS	[shape=oval, color=red2, label="CS"];
		}
		subgraph ms{
		MS -> StateMethodState;
		MS	[shape=oval, color=red2, label="MS"];
		}
		subgraph vs{
		VS -> StateValueState;
		VS	[shape=oval, color=red2, label="VS"];
		}
	}
	subgraph drails {
	}
}

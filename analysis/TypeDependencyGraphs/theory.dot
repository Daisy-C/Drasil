digraph alltypes {
	subgraph teoryconcepths {
	}
	subgraph clasess {
	}
	subgraph contraintsets {
		subgraph constraintset{
		ConstraintSet	[shape=oval, color=cyan3, label="ConstraintSet"];
		ConstraintSet -> ConceptChunk;
		ConstraintSet -> NonEmptyExpr;
		}
	}
	subgraph datadefinition {
		subgraph datadefinition{
		DataDefinition	[shape=oval, color=cyan3, label="DataDefinition"];
		DataDefinition -> QDefinition;
		DataDefinition -> ScopeType;
		DataDefinition -> DecRef;
		DataDefinition -> MaybeDerivation;
		DataDefinition -> ShortName;
		DataDefinition -> String;
		DataDefinition -> Sentence;
		}
		subgraph scope{
		Scope	[shape=oval, color=darkgreen, label="Scope"];
		Scope -> UID;
		}
	}
	subgraph gendefn {
		subgraph gendefn{
		GenDefn	[shape=oval, color=cyan3, label="GenDefn"];
		GenDefn -> ModelKind;
		GenDefn -> MaybeUnitDefn;
		GenDefn -> MaybeDerivation;
		GenDefn -> DecRef;
		GenDefn -> ShortName;
		GenDefn -> String;
		GenDefn -> Sentence;
		}
	}
	subgraph intancemodels {
		subgraph instancemodel{
		InstanceModel	[shape=oval, color=cyan3, label="InstanceModel"];
		InstanceModel -> ModelKind;
		InstanceModel -> Inputs;
		InstanceModel -> Output;
		InstanceModel -> DecRef;
		InstanceModel -> MaybeDerivation;
		InstanceModel -> ShortName;
		InstanceModel -> String;
		InstanceModel -> Sentence;
		}
		subgraph input{
		Input	[shape=oval, color=red2, label="Input"];
		Input -> QuantityDictMaybeRealIntervalExprExpr;
		}
		subgraph inputs{
		Inputs	[shape=oval, color=red2, label="Inputs"];
		Inputs -> Input;
		}
		subgraph output{
		Output	[shape=oval, color=red2, label="Output"];
		Output -> QuantityDict;
		}
		subgraph outputconstraints{
		OutputConstraints	[shape=oval, color=red2, label="OutputConstraints"];
		OutputConstraints -> RealIntervalExprExpr;
		}
	}
	subgraph modelkinds {
		subgraph modelkind{
		ModelKind	[shape=oval, color=cyan3, label="ModelKind"];
		ModelKind -> ModelKinds;
		ModelKind -> UID;
		ModelKind -> NP;
		}
		subgraph modelkinds{
		ModelKinds	[shape=oval, color=darkviolet, label="ModelKinds"];
		ModelKinds -> RelationConcept;
		ModelKinds -> ConstraintSet;
		ModelKinds -> QDefinition;
		ModelKinds -> MultiDefn;
		}
	}
	subgraph multidefn {
		subgraph definingexpr{
		DefiningExpr	[shape=oval, color=cyan3, label="DefiningExpr"];
		DefiningExpr -> UID;
		DefiningExpr -> Sentence;
		DefiningExpr -> Expr;
		}
		subgraph multidefn{
		MultiDefn	[shape=oval, color=cyan3, label="MultiDefn"];
		MultiDefn -> UID;
		MultiDefn -> QuantityDict;
		MultiDefn -> Sentence;
		MultiDefn -> NonEmptyDefiningExpr;
		}
	}
	subgraph teoryh {
		subgraph theorymodel{
		TheoryModel	[shape=oval, color=cyan3, label="TheoryModel"];
		TheoryModel -> ModelKind;
		TheoryModel -> TheoryModel;
		TheoryModel -> SpaceDefn;
		TheoryModel -> QuantityDict;
		TheoryModel -> ConceptChunk;
		TheoryModel -> QDefinition;
		TheoryModel -> ModelExpr;
		TheoryModel -> DecRef;
		TheoryModel -> ShortName;
		TheoryModel -> String;
		TheoryModel -> Sentence;
		}
	}
	subgraph drails {
	}
}
